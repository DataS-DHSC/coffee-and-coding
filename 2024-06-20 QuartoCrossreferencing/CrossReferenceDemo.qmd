---
title: "Quarto cross-referencing"
format: html
---

``` {r set up, include = FALSE, warning = FALSE}
knitr::opts_chunk$set(echo    = FALSE,
                      warning = FALSE,
                      message = FALSE)
library(plotly)
library(htmlTable)
```


Below are some basic examples of using figure and table referencing in Quarto. For more information, see the [Quarto Guide chapter on Cross-References](https://quarto.org/docs/authoring/cross-references.html).

## Cross-referencing basics

Every cross-referenceable entity requires a label â€” a unique identifier prefixed with a cross-reference type such as 'tbl-' or 'fig-'.

Note that objects are named, but not numbered, within the Quarto file. Sequential numbering, by cross-reference type, is assigned during the rendering process, making it easy to change the order of chunks within a document without having to edit cross reference numbering in the document narrative.

## Cross reference a figure

Here is some narrative about the figure below which is labelled using the fig- prefix (See @fig-population).  This label:

* triggers figure number assignment on rendering
* adds a prefix 'Figure x: ' to the figure caption that is displayed below the figure
* allows cross references, hyperlinked to the object, to be included in the document narrative.

``` {r}
#| label: fig-population
#| fig-cap: "Population"

plot_ly(economics,
        type = "scatter",
        x = ~date,
        y = ~pop)

```

</br>

## Cross reference another figure

Similarly, a figure embedded from a file using markdown can be made into a cross-referenceable entity by adding a #fig- label in curly braces (See @fig-DHSClogo)

</br>

![DHSC logo](DHSC_3268_AW.png){#fig-DHSClogo}

</br>

## Cross reference a table

The tbl- label type works in the same way for tables generated by executable code chunks. The table below is labelled using the tbl- prefix allowing a hyperlinked cross reference to be included within the document narrative (See @tbl-cars).

``` {r}
#| label: tbl-cars
#| tbl-cap: "Car data"
htmlTable(head(mtcars))
```

</br>

## Cross reference a markdown table

For markdown tables, a caption can be added below the table with a #tbl- label in braces at the end of the caption. See @tbl-letters.

| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: My Caption {#tbl-letters}

</br>

## Cross reference tables and subtables

Multiple tables (or figures) can be included within a single code cell. Below we can see the top and bottom 10 rows from the iris dataset.  These tables can be cross referenced individually (See @tbl-iris-1), or as a whole (See @tbl-iris).

``` {r}
#| label: tbl-iris
#| tbl-cap: "Iris data"
#| tbl-subcap:
#|   - "Top 10"
#|   - "Bottom 10"
#| layout-ncol: 2

library(knitr)
kable(head(iris))
kable(tail(iris))
```


## More features

There are lots of options that can be set within the crossref key of the document metadata (YAML).  See the [Quarto Guide chapter on Cross-Reference Options](https://quarto.org/docs/authoring/cross-reference-options.html).  Some useful ones include:

* Specifying the numbering scheme (eg 1, 2, 3 or i, ii, iii etc)
* Chapter-level numbering (eg 1.1, 1.2, 1.3, 2.1, 2.2 etc)
* Changing the table and figure prefix text (Figure:, fig:, etc)
* Turning on/off hyperlink features (useful for accessibility)


## Quarto version

This reprex was written using Quarto version 1.4 which is part of the RStudio 2024 package. Some users may have earlier versions - some differences I noticed with Quarto v1.1.189 (RStudio 2022) include:

* Quarto 1.4 allows table numbering with DT::datatable() (although note that these interactive tables aren't recommended for accessibility reasons)
* Quarto 1.4 displays a hover image of the object in the cross-referenced hyperlink (possible accessibility issues). This can be turned off with the crossref: ref_hyperlink YAML option.


## Other output formats

Avoid using underscores in labels as this can cause problems when rendering to PDF with LaTeX
